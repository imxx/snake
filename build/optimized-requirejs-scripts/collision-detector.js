define(["calculations","settings"],function(i,a){var t={collisions:[],checkCollisions:function(t,e){boardHeight=a.board.height,boardWidth=a.board.width,that=this,t.forEach(function(s,l){s.forEach(function(l,o){i.getDistance(l,e)<a.cellRadius+a.foodRadius?that.collisions.push({type:"food"}):0!==o&&1!==o&&i.getDistance(t.head,l)<2*a.cellRadius?that.selfCollision=!0:l.leavingBoard&&l.x+a.cellRadius<=0||l.x>=boardWidth+a.cellRadius||l.y+a.cellRadius<=0||l.y>=boardHeight+a.cellRadius?that.collisions.push({type:"outofview",data:{subsnake:s,i:o}}):l.x<a.cellRadius?l.enteringBoard||l.leavingBoard||that.collisions.push({type:"wall",data:{subsnake:s,i:o,direction:"w"}}):l.y<a.cellRadius?l.enteringBoard||l.leavingBoard||that.collisions.push({type:"wall",data:{subsnake:s,i:o,direction:"n"}}):l.y>boardHeight-a.cellRadius?l.enteringBoard||l.leavingBoard||that.collisions.push({type:"wall",data:{subsnake:s,i:o,direction:"s"}}):l.x>boardWidth-a.cellRadius?l.enteringBoard||l.leavingBoard||that.collisions.push({type:"wall",data:{subsnake:s,i:o,direction:"e"}}):l.enteringBoard&&that.collisions.push({type:"none",data:{subsnake:s,i:o}})})})},reset:function(){this.collisions.length=0,this.selfCollision=!1}};return t});