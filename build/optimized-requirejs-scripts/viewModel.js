define(["settings","knockout"],function(e,s){function o(e){s.bindingHandlers.startGame={init:function(s){s.addEventListener("click",e)}}}function n(e){s.bindingHandlers.pointerTracker={update:function(s,o,n,t){o()()?s.addEventListener("mousemove",e):s.removeEventListener("mousemove",e)}}}function t(){e.setDefaults(),r.speed(e.speedDefault),r.cellRadius(e.cellRadiusDefault),r.foodRadius(e.foodRadiusDefault)}function i(e){r.score(r.score()+e)}function a(){r.showSettings(!r.showSettings())}var r={isGamePlay:s.observable(!1),isGameEnd:s.observable(!1),showSettings:s.observable(!1),needToTrack:s.observable(!1),score:s.observable(0),highScore:s.observable(0),foodWorth:s.observable(void 0),speed:s.observable(e.speedDefault),cellRadius:s.observable(e.cellRadiusDefault),foodRadius:s.observable(e.foodRadiusDefault),setDefaults:t,incrementScore:i,toggleShowSettings:a,setStartGameBinding:o,setPointerTrackerBinding:n};return r.speed.subscribe(function(s){e.speed=parseInt(s)}),r.cellRadius.subscribe(function(s){e.cellRadius=parseInt(s)}),r.foodRadius.subscribe(function(s){e.foodRadius=parseInt(s)}),r});